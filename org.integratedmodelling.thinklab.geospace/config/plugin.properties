# -----------------------------------------------------------------------------------------
# env variables related to runnning grass locally. Anything after geospace.grass.env becomes
# an env variable for wherever GRASS is run. Variables such as GISDBASE will be checked
# and defaults will be generated if the var is not there, so no variable is mandatory except
# the location of the GRASS installation.
# -----------------------------------------------------------------------------------------
#geospace.grass.env.VARNAME=value

# -----------------------------------------------------------------------------------------
# You can specify a preferred projection if you plan to merge data in different ones and 
# you don't want the overall projection to be assigned from the data. The parameter must
# be a valid EPSG code with prefix, e.g EPSG:4326 for WGS 84 (lat/lon). Setting this one
# will force resampling of all your layers unless they're in it, so it's best used when
# most of the data are in this projection already.
geospace.preferred.crs=EPSG:4326

# -----------------------------------------------------------------------------------------
# declare new metadata types for kboxes
# -----------------------------------------------------------------------------------------
kbox.metadata.type.centroid=geospace:Point
kbox.metadata.type.boundingbox=geospace:Polygon
kbox.metadata.type.shape=geospace:Polygon
kbox.metadata.type.areasqm=thinklab-core:Float

# -----------------------------------------------------------------------------------------
# If you want to enable drawing of portions of space from world images, set a worldimage
# to use here (should be a URL). You normally want a hi-res good looking sat image like
# NASA blue marble.
# -----------------------------------------------------------------------------------------
#geospace.worldimage=....

# Properties to direct WCS and WFS datasources to default servers if none is specified
# wcs.service.url=http://ecoinformatics.uvm.edu/geoserver/wcs
# wfs.service.timeout=10000